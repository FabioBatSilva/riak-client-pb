<?php
/**
 * Generated by Protobuf protoc plugin.
 *
 * File descriptor : riak.proto
 */


namespace Riak\Client\ProtoBuf\MapUpdate;

/**
 * Protobuf enum : MapUpdate.FlagOp
 */
class FlagOp extends \Protobuf\Enum
{

    /**
     * ENABLE = 1
     */
    const ENABLE_VALUE = 1;

    /**
     * DISABLE = 2
     */
    const DISABLE_VALUE = 2;

    /**
     * @var \Riak\Client\ProtoBuf\MapUpdate\FlagOp
     */
    protected static $ENABLE = null;

    /**
     * @var \Riak\Client\ProtoBuf\MapUpdate\FlagOp
     */
    protected static $DISABLE = null;

    /**
     * @return \Riak\Client\ProtoBuf\MapUpdate\FlagOp
     */
    public static function ENABLE()
    {
        if (self::$ENABLE !== null) {
            return self::$ENABLE;
        }

        return self::$ENABLE = new self('ENABLE', self::ENABLE_VALUE);
    }

    /**
     * @return \Riak\Client\ProtoBuf\MapUpdate\FlagOp
     */
    public static function DISABLE()
    {
        if (self::$DISABLE !== null) {
            return self::$DISABLE;
        }

        return self::$DISABLE = new self('DISABLE', self::DISABLE_VALUE);
    }

    /**
     * @param int $value
     * @return \Riak\Client\ProtoBuf\MapUpdate\FlagOp
     */
    public static function valueOf($value)
    {
        switch ($value) {
            case 1: return self::ENABLE();
            case 2: return self::DISABLE();
            default: return null;
        }
    }


}

